@Library('my-shared-library') _
pipeline{
    
    agent any
     parameters{

        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'ImageName', description: "name of the docker build", defaultValue: 'javapp')
        string(name: 'ImageTag', description: "tag of the docker build", defaultValue: 'v1')
        string(name: 'DockerHubUser', description: "name of the Application", defaultValue: 'javaapps')
       
    }

    stages{
      
        stage('Git checkout'){ when { expression {  params.action == 'create' } }
            steps{
              script{
                
               gitCheckout(branch:"master", url:"https://github.com/brenda-la/devopos_java_app.git")
              
              }  
            }
        }
         stage('unit test maven'){
            when { expression {  params.action == 'create' } }
            steps{
              script{
                
              mvnTest()
              
              }  
            }
        }
        stage('maven integration test'){
             when { expression {  params.action == 'create' } }
            steps{
              script{
                
              mvnIntegrationTest()
              
              }  
            }
        }
             stage('Static code analysis: Sonarqube'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                   
                   def SonarQubecredentialsId = 'sonaridentifiant'
                   statiCodeAnalysis(SonarQubecredentialsId)
               }
            }
        }
         
     stage('Maven Build : maven'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                   
                   mvnBuild()
               }
            }
        }
    }
}